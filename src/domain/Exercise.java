package domain;

/**
 * Клас для виконання обчислень, зокрема, для підрахунку щасливих трамвайних квитків.
 * <p>
 * "Щасливим" вважається шестизначний квиток, у якого сума перших трьох цифр дорівнює сумі останніх трьох цифр.
 * Наприклад: 123321 (1+2+3 = 6, 3+2+1 = 6), 007070 (0+0+7 = 7, 0+7+0 = 7).
 * </p>
 */
public class Exercise {

    /**
     * Обчислює загальну кількість "щасливих" трамвайних квитків у стандартному діапазоні
     * номерів від 000000 до 999999.
     *
     * @return Кількість щасливих квитків у діапазоні від 000000 до 999999.
     */
    public static int Calculate() {
        int happyTicketCount = 0; // Ініціалізуємо лічильник щасливих квитків

        // Перебираємо всі можливі шестизначні номери квитків.
        // Номери варіюються від 0 (000000) до 999999.
        for (int ticketNumber = 0; ticketNumber <= 999999; ticketNumber++) {

            // Витягуємо кожну цифру номера квитка за допомогою арифметичних операцій
            // (ділення та остача від ділення).
            // Це ефективніше, ніж перетворювати число в рядок на кожній ітерації.
            int d1 = (ticketNumber / 100000) % 10; // Сотні тисяч
            int d2 = (ticketNumber / 10000) % 10;  // Десятки тисяч
            int d3 = (ticketNumber / 1000) % 10;   // Тисячі
            int d4 = (ticketNumber / 100) % 10;    // Сотні
            int d5 = (ticketNumber / 10) % 10;     // Десятки
            int d6 = ticketNumber % 10;            // Одиниці

            // Обчислюємо суму перших трьох цифр
            int sumFirstThree = d1 + d2 + d3;

            // Обчислюємо суму останніх трьох цифр
            int sumLastThree = d4 + d5 + d6;

            // Перевіряємо умову "щасливого" квитка: сума перших трьох дорівнює сумі останніх трьох
            if (sumFirstThree == sumLastThree) {
                happyTicketCount++; // Якщо умова виконується, збільшуємо лічильник
            }
        }

        return happyTicketCount; // Повертаємо загальну кількість щасливих квитків
    }

    // Додаткові приватні методи для цього простого завдання не потрібні.
    // Логіка витягування та сумування цифр вбудована безпосередньо у цикл.
}